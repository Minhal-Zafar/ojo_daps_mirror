name: Ojd Daps Terraform Deploy

on:
  push:
    # Pushes to dev happen on successful PR merge
    branches:
      - dev
    # Tags ending in '_DEV' get generated by ojd_daps/deploy/dev_deploy.py
    # when prototyping new deployment configurations
    tags:
      - "**_DEV"
    # Only deploy when there are changes to the following paths
    paths:
      - ojd_daps/deploy/**
      - .github/workflows/build-ecr-publish.yml
      - .github/workflows/terraform-deploy.yml

jobs:
  ojd-daps-deploy:
    name: Deploy using Ojd-daps Terraform
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Terraform configure
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.15.3

      - name: AWS Batch Job definition deploy
        id: deploy_ojd_daps_job_definition
        env:
          DAPS_TERRAFORM_WORKINGDIR: ojd_daps/deploy/terraform/
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ojd-daps
        run: |
          echo "Update AWS Batch with image: ${ECR_REGISTRY}/${ECR_REPOSITORY}:latest"
          cd ${DAPS_TERRAFORM_WORKINGDIR}
          terraform init -input=false
          terraform plan -no-color -out=ojddapsbatch.tfplan
          terraform apply -no-color -auto-approve ojddapsbatch.tfplan
